(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[20],{K1Rl:function(t,e,n){"use strict";var i,o=n("q1tI"),a=n.n(o),s=n("vOnD"),r=n("ODXe"),c=n("UP1k"),l=n("yYqN"),u=a.a.createElement,g=s.a.div.withConfig({displayName:"map__MapWrap",componentId:"kje32g-0"})(["height:400px;width:100%;display:block;position:relative;"]),p=function(t){var e=t.latitude,n=t.longitude,i=t.layers,s=a.a.useState(!0),p=Object(r.a)(s,2),d=p[0],f=p[1],h=Object(o.useState)({longitude:n,latitude:e,zoom:14,bearing:0,pitch:25,maxZoom:20}),v=h[0],x=h[1];return Object(o.useEffect)((function(){f(!d)}),[i]),u("div",null,u(g,null,u(l.a,{layers:i,controller:{dragRotate:!1},viewState:v,onViewStateChange:function(t){var e=t.viewState;x(e)}},u("div",null,d),u(c.a,{reuseMaps:!0,mapStyle:"mapbox://sprites/mapbox/streets-v9",preventStyleDiffing:!0,mapboxApiAccessToken:"pk.eyJ1IjoiaWxpYTI0IiwiYSI6ImNqeTNkMmxnbjB3Y3IzbWxxdXJueWxxam8ifQ.aijQPC8lS98itCEeia55YQ"}))))},d=n("1OyB"),f=n("vuIU"),h=n("md7G"),v=n("foSv"),x=n("ReuC"),m=n("Ji7U"),_=n("K4gp"),y=n("BQ9P"),b=n("K7jV"),P=n("ykdB"),w=n("0i8A"),S=n("rePB"),C=n("MdWm"),O=n("p7wt"),M=n("f5Sf"),I=n("nJkv"),z=n("JBga"),j=n("rpwb"),T=n("Jh/b"),k=function(){},E=(i={},Object(S.a)(i,10241,9987),Object(S.a)(i,10240,9729),Object(S.a)(i,10242,33071),Object(S.a)(i,10243,33071),i);function R(t){return t&&(t.id||t.url)}function L(t,e,n){for(var i=0;i<e.length;i++){var o=e[i],a=o.icon,s=o.xOffset;t[R(a)]=Object.assign({},a,{x:s,y:n})}}var D=function(){function t(e,n){var i=n.onUpdate,o=void 0===i?k:i;Object(d.a)(this,t),this.gl=e,this.onUpdate=o,this._loadOptions=null,this._getIcon=null,this._texture=null,this._externalTexture=null,this._mapping={},this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null}return Object(f.a)(t,[{key:"finalize",value:function(){this._texture&&this._texture.delete()}},{key:"getTexture",value:function(){return this._texture||this._externalTexture}},{key:"getIconMapping",value:function(t){var e=this._autoPacking?R(t):t;return this._mapping[e]||{}}},{key:"setProps",value:function(t){var e=t.loadOptions,n=t.autoPacking,i=t.iconAtlas,o=t.iconMapping,a=t.data,s=t.getIcon;e&&(this._loadOptions=e),void 0!==n&&(this._autoPacking=n),s&&(this._getIcon=s),o&&(this._mapping=o),i&&this._updateIconAtlas(i),this._autoPacking&&(a||s)&&"undefined"!==typeof document&&(this._canvas=this._canvas||document.createElement("canvas"),this._updateAutoPacking(a))}},{key:"_updateIconAtlas",value:function(t){this._texture&&(this._texture.delete(),this._texture=null),t instanceof M.a?(t.setParameters(E),this._externalTexture=t,this.onUpdate()):t&&(this._texture=new M.a(this.gl,{data:t,parameters:E}),this.onUpdate())}},{key:"_updateAutoPacking",value:function(t){var e=Object.values(function(t,e,n){if(!t||!e)return null;n=n||{};var i={},o=Object(j.a)(t),a=o.iterable,s=o.objectInfo,r=!0,c=!1,l=void 0;try{for(var u,g=a[Symbol.iterator]();!(r=(u=g.next()).done);r=!0){var p=u.value;s.index++;var d=e(p,s),f=R(d);if(!d)throw new Error("Icon is missing.");if(!d.url)throw new Error("Icon url is missing.");i[f]||n[f]&&d.url===n[f].url||(i[f]=d)}}catch(h){c=!0,l=h}finally{try{r||null==g.return||g.return()}finally{if(c)throw l}}return i}(t,this._getIcon,this._mapping)||{});if(e.length>0){var n=function(t){for(var e,n=t.icons,i=t.buffer,o=t.mapping,a=void 0===o?{}:o,s=t.xOffset,r=void 0===s?0:s,c=t.yOffset,l=void 0===c?0:c,u=t.rowHeight,g=void 0===u?0:u,p=t.canvasWidth,d=[],f=0;f<n.length;f++){var h=n[f];if(!a[R(h)]){var v=h.height,x=h.width;r+x+i>p&&(L(a,d,l),r=0,l=g+l+i,g=0,d=[]),d.push({icon:h,xOffset:r}),r=r+x+i,g=Math.max(g,v)}}return d.length>0&&L(a,d,l),{mapping:a,rowHeight:g,xOffset:r,yOffset:l,canvasWidth:p,canvasHeight:(e=g+l+i,Math.pow(2,Math.ceil(Math.log2(e))))}}({icons:e,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset}),i=n.mapping,o=n.xOffset,a=n.yOffset,s=n.rowHeight,r=n.canvasHeight;this._rowHeight=s,this._mapping=i,this._xOffset=o,this._yOffset=a,this._canvasHeight=r,this._texture||(this._texture=new M.a(this.gl,{width:this._canvasWidth,height:this._canvasHeight,parameters:E})),this._texture.height!==this._canvasHeight&&(this._texture=function(t,e,n,i){var o=e.width,a=e.height,s=Object(C.a)(e,{width:n,height:i});return Object(O.b)(e,s,{targetY:0,width:o,height:a}),e.delete(),s}(this.gl,this._texture,this._canvasWidth,this._canvasHeight)),this.onUpdate(),this._loadIcons(e)}}},{key:"_loadIcons",value:function(t){var e=this,n=this._canvas.getContext("2d"),i=!0,o=!1,a=void 0;try{for(var s,r=function(){var t=s.value;e._pendingCount++,Object(z.a)(t.url,I.a,e._loadOptions).then((function(i){var o=R(t),a=e._mapping[o],s=a.x,r=a.y,c=a.width,l=a.height,u=function(t,e,n,i){return n===e.width&&i===e.height?e:(t.canvas.height=i,t.canvas.width=n,t.clearRect(0,0,t.canvas.width,t.canvas.height),t.drawImage(e,0,0,e.width,e.height,0,0,n,i),t.canvas)}(n,i,c,l);e._texture.setSubImageData({data:u,x:s,y:r,width:c,height:l}),e._texture.generateMipmap(),e.onUpdate()})).catch((function(t){T.a.error(t)()})).finally((function(){e._pendingCount--}))},c=t[Symbol.iterator]();!(i=(s=c.next()).done);i=!0)r()}catch(l){o=!0,a=l}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}}},{key:"isLoaded",get:function(){return 0===this._pendingCount}}]),t}(),A=[0,0,0,255],F={iconAtlas:{type:"object",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:function(t){return t.position}},getIcon:{type:"accessor",value:function(t){return t.icon}},getColor:{type:"accessor",value:A},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]}},N=function(t){function e(){return Object(d.a)(this,e),Object(h.a)(this,Object(v.a)(e).apply(this,arguments))}return Object(m.a)(e,t),Object(f.a)(e,[{key:"getShaders",value:function(){return Object(x.a)(Object(v.a)(e.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale), \n    sizeMinPixels, sizeMaxPixels\n  );\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n",fs:"#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[_.a,y.a]})}},{key:"initializeState",value:function(){var t=this;this.state={iconManager:new D(this.context.gl,{onUpdate:function(){return t._onUpdate()}})},this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:5121,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getColor",defaultValue:A},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}},{key:"updateState",value:function(t){var n=t.oldProps,i=t.props,o=t.changeFlags;Object(x.a)(Object(v.a)(e.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o});var a=this.getAttributeManager(),s=i.iconAtlas,r=i.iconMapping,c=i.data,l=i.getIcon,u=this.state.iconManager;u.setProps({loadOptions:i.loadOptions});var g=!1;if(s||this.internalState.isAsyncPropLoading("iconAtlas")?(n.iconAtlas!==i.iconAtlas&&u.setProps({iconAtlas:s,autoPacking:!1}),n.iconMapping!==i.iconMapping&&(u.setProps({iconMapping:r}),g=!0)):u.setProps({autoPacking:!0}),(o.dataChanged||o.updateTriggersChanged&&(o.updateTriggersChanged.all||o.updateTriggersChanged.getIcon))&&(u.setProps({data:c,getIcon:l}),g=!0),g&&(a.invalidate("instanceOffsets"),a.invalidate("instanceIconFrames"),a.invalidate("instanceColorModes")),o.extensionsChanged){var p=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(p)}),a.invalidateAll()}}},{key:"finalizeState",value:function(){Object(x.a)(Object(v.a)(e.prototype),"finalizeState",this).call(this),this.state.iconManager.finalize()}},{key:"draw",value:function(t){var e=t.uniforms,n=this.props,i=n.sizeScale,o=n.sizeMinPixels,a=n.sizeMaxPixels,s=n.sizeUnits,r=n.billboard,c=n.alphaCutoff,l=this.state.iconManager,u=this.context.viewport,g=l.getTexture();g&&g.loaded&&this.state.model.setUniforms(Object.assign({},e,{iconsTexture:g,iconsTextureDim:[g.width,g.height],sizeScale:i*("pixels"===s?u.metersPerPixel:1),sizeMinPixels:o,sizeMaxPixels:a,billboard:r,alphaCutoff:c})).draw()}},{key:"_getModel",value:function(t){return new P.a(t,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new w.a({drawMode:6,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0}))}},{key:"_onUpdate",value:function(){this.setNeedsRedraw()}},{key:"getInstanceOffset",value:function(t){var e=this.state.iconManager.getIconMapping(t);return[e.width/2-e.anchorX||0,e.height/2-e.anchorY||0]}},{key:"getInstanceColorMode",value:function(t){return this.state.iconManager.getIconMapping(t).mask?1:0}},{key:"getInstanceIconFrame",value:function(t){var e=this.state.iconManager.getIconMapping(t);return[e.x||0,e.y||0,e.width||0,e.height||0]}},{key:"isLoaded",get:function(){return Object(x.a)(Object(v.a)(e.prototype),"isLoaded",this)&&this.state.iconManager.isLoaded}}]),e}(b.a);N.layerName="IconLayer",N.defaultProps=F;var H=n("c05i"),G=n.n(H),W=n("PdaG"),U=function(t,e,n,i,o){var a=[{type:"listing",coordinates:[n,e],name:i}];return t&&t.sold_listings.length>0&&t.sold_listings.map((function(t){a.push({type:"soldListing",coordinates:[t.longitude,t.latitude],name:t.address})})),t&&t.listings.length>0&&t.listings.map((function(t){a.push({type:"marketListing",coordinates:[t.longitude,t.latitude],name:t.address})})),new N({id:"icon-layer",data:a,pickable:!0,iconAtlas:G.a,iconMapping:W,getIcon:function(t){return t.type},sizeScale:6,getPosition:function(t){return t.coordinates},getSize:function(t){return 7},onHover:o})},V=[0,0,0,255],Z={getSourcePosition:{type:"accessor",value:function(t){return t.sourcePosition}},getTargetPosition:{type:"accessor",value:function(t){return t.targetPosition}},getSourceColor:{type:"accessor",value:V},getTargetColor:{type:"accessor",value:V},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}},Y=function(t){function e(){return Object(d.a)(this,e),Object(h.a)(this,Object(v.a)(e).apply(this,arguments))}return Object(m.a)(e,t),Object(f.a)(e,[{key:"getShaders",value:function(){return Object(x.a)(Object(v.a)(e.prototype),"getShaders",this).call(this,{vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  float unitZ = dh == 0.0 ? 0.0 : deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    vec3 source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    vec3 target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n  \n    float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n    float nextSegmentRatio = getSegmentRatio(min(numSegments, segmentIndex + 1.0));\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source = project_position(instanceSourcePositions, instanceSourcePositions64Low);\n    vec3 target = project_position(instanceTargetPositions, instanceTargetPositions64Low);\n\n    float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",modules:[_.a,y.a]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getSourceColor",defaultValue:V},instanceTargetColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getTargetColor",defaultValue:V},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}},{key:"updateState",value:function(t){var n=t.props,i=t.oldProps,o=t.changeFlags;if(Object(x.a)(Object(v.a)(e.prototype),"updateState",this).call(this,{props:n,oldProps:i,changeFlags:o}),o.extensionsChanged){var a=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(a)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(t){var e=t.uniforms,n=this.context.viewport,i=this.props,o=i.widthUnits,a=i.widthScale,s=i.widthMinPixels,r=i.widthMaxPixels,c=i.greatCircle,l="pixels"===o?n.metersPerPixel:1;this.state.model.setUniforms(e).setUniforms({greatCircle:c,widthScale:a*l,widthMinPixels:s,widthMaxPixels:r}).draw()}},{key:"_getModel",value:function(t){for(var e=[],n=0;n<50;n++)e=e.concat([n,1,0,n,-1,0]);var i=new P.a(t,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new w.a({drawMode:5,attributes:{positions:new Float32Array(e)}}),isInstanced:!0}));return i.setUniforms({numSegments:50}),i}}]),e}(b.a);Y.layerName="ArcLayer",Y.defaultProps=Z;var K=function(t,e,n,i,o){if(t&&e&&o){var a=[{from:{name:n,coordinates:[e,t]},to:{name:o[i].name,coordinates:[o[i].longitude,o[i].latitude]}}];return new Y({data:a,pickable:!0,getWidth:6,getSourcePosition:function(t){return t.from.coordinates},getTargetPosition:function(t){return t.to.coordinates},getSourceColor:[55,202,55],getTargetColor:[55,202,56],updateTriggers:{getSourcePosition:!0,getTargetPosition:!0},onHover:function(t){t.object,t.x,t.y}})}},q=function(t){return t*Math.PI/180},J=function(t,e,n){var i={ttc:{name:"placeholder",distance:15e3,color:"0,0,0"},go:{name:"placeholder",distance:15e3,color:"0,0,0"}};return t&&t.map((function(t){var o=function(t,e,n,i){var o=q(t),a=q(n),s=q(n-t),r=q(i-e),c=Math.sin(s/2)*Math.sin(s/2)+Math.cos(o)*Math.cos(a)*Math.sin(r/2)*Math.sin(r/2);return 2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c))*6371e3}(e,n,t.gis_location.coordinates[0],t.gis_location.coordinates[1]);o<i[t.type].distance&&(i[t.type]={color:t.color,name:t.name,latitude:t.gis_location.coordinates[0],longitude:t.gis_location.coordinates[1],distance:o})})),i},B=n("ctuC"),X=n("+7vx"),Q=n("Oynx"),$=a.a.createElement,tt=s.a.div.withConfig({displayName:"transitCompMap__SelectorWrap",componentId:"nebxbw-0"})(["height:60px;width:33.33%;display:inline-block;cursor:",";position:relative;box-sizing:border-box;border-right:1px solid grey;vertical-align:bottom;background-color:",";transition:background-color 0.25s ease;:hover{background-color:",";}&:last-of-type{border-right:none;}p{color:",";;}"],(function(t){return t.active?"default":"pointer"}),(function(t){return t.active?"#F89E37":"transparent"}),(function(t){return t.active?"#F89E37":"#f89e374d"}),(function(t){return t.active?"white":"black"})),et=s.a.p.withConfig({displayName:"transitCompMap__SelectorTitle",componentId:"nebxbw-1"})(["display:inline-block;width:",";position:absolute;font-size:20px;height:fit-content;top:0;bottom:0;left:",";margin:auto;text-align:center;"],(function(t){return t.center?"100%":"50%"}),(function(t){return t.center?"0px":"5px"})),nt=s.a.div.withConfig({displayName:"transitCompMap__ClosestPointWrap",componentId:"nebxbw-2"})(["position:absolute;width:50%;right:0px;top:0;bottom:0;margin:auto;height:fit-content;text-align:center;"]),it=s.a.p.withConfig({displayName:"transitCompMap__PointTitle",componentId:"nebxbw-3"})(["font-size:13px;font-weight:600;"]),ot=s.a.p.withConfig({displayName:"transitCompMap__PointDistance",componentId:"nebxbw-4"})(["font-size:21px;font-weight:400;"]),at=function(t){var e=t.title,n=t.setMapType,i=t.type,o=t.point,a=t.active,s=t.center;return $(tt,{active:a,onClick:function(){n(i)}},$(et,{center:s},e),!s&&$(nt,null,$(it,null," ",o.name),$(ot,null," ",(o.distance/1e3).toFixed(2),"km")))},st=s.a.div.withConfig({displayName:"transitCompMap__ComparisonWrap",componentId:"nebxbw-5"})(["width:400px;height:500px;display:inline-block;vertical-align:top;padding:10px;box-sizing:border-box;"]),rt=s.a.div.withConfig({displayName:"transitCompMap__Selectors",componentId:"nebxbw-6"})(["width:100%;border-top-right-radius:10px;border-top-left-radius:10px;border:1px solid #b3b3b3;box-sizing:border-box;overflow:hidden;"]),ct=s.a.div.withConfig({displayName:"transitCompMap__MapWrap",componentId:"nebxbw-7"})(["width:",";display:inline-block;vertical-align:top;position:relative;"],(function(t){return t.topSelectors?"100%":"800px"})),lt=s.a.div.withConfig({displayName:"transitCompMap__ToolTip",componentId:"nebxbw-8"})(["position:absolute;margin-top:22px;z-index:999999999999;background-color:#000000b3;color:white;padding:4px 12px;border-radius:9px;h5{margin:0px;font-size:18px;font-weight:600;letter-spacing:1px;}"]),ut=function(t,e){return t?new X.a({data:t,pickable:!0,opacity:1,stroked:!0,filled:!0,radiusScale:6,radiusMinPixels:5,radiusMaxPixels:100,lineWidthMinPixels:2,getPosition:function(t){return[t.gis_location.coordinates[1],t.gis_location.coordinates[0]]},getFillColor:function(t){return[255,255,255]},getLineColor:function(t){return t.color},updateTriggers:{getPosition:t[0].type,getLineColor:t[0].type},onHover:e}):null};e.a=function(t){var e=t.latitude,n=t.longitude,i=t.address,a=t.pointData,s=t.nearbyData,r=t.schoolData,c=t.compsEnabled,l=t.mapType,u=t.setMapType,g=Object(o.useState)(),d=g[0],f=g[1],h=Object(o.useState)([]),v=h[0],x=h[1],m=Object(o.useState)(),_=m[0],y=m[1],b=Object(o.useState)(),P=b[0],w=b[1],S=Object(o.useState)(),C=S[0],O=S[1],M=Object(o.useState)(),I=M[0],z=M[1],j=Object(o.useState)(null),T=j[0],k=j[1],E=Object(o.useState)(0),R=E[0],L=E[1],D=Object(o.useState)(0),A=D[0],F=D[1];Object(o.useEffect)((function(){x([_,P,C,I])}),[_,P,C,I]),Object(o.useEffect)((function(){z(U(s,e,n,i,N)),f(J(s.map_points,e,n,N))}),[s]),Object(o.useEffect)((function(){var t;a&&(w((t=a.map_paths)&&0!=t.length?new B.a({data:t,getPath:function(t){return t.points},getColor:function(t){return t.color},updateTriggers:{getColor:t[0].type,getPath:t[0].type},widthMinPixels:6}):null),O(ut(a.map_points,N)))}),[a]),Object(o.useEffect)((function(){r&&(w(null),O(ut(r.map_points,N)))}),[r]),Object(o.useEffect)((function(){y("school"!=l?K(e,n,"Precon",l,d):null)}),[l,d]);var N=function(t){var e=t.x,n=t.y,i=t.object;L(e),F(n),k(i)};return $("div",null,$(ct,{compsEnabled:c},d&&$(rt,null,$(at,{active:"ttc"==l,point:d.ttc,title:"TTC Stations",type:"ttc",setMapType:u}),$(at,{active:"go"==l,point:d.go,title:"GO Stations",type:"go",setMapType:u}),$(at,{center:!0,active:"school"==l,point:d.hw,title:"Schools",type:"school",setMapType:u})),$(p,{latitude:e,longitude:n,layers:v}),T&&$(lt,{className:"tooltip",style:{left:R,top:A}},$("h5",null,T.name||"-"))),c&&s&&$(st,null,$(Q.a,{listings:s.listings,soldListings:s.sold_listings})))}},PdaG:function(t){t.exports=JSON.parse('{"ttc":{"x":0,"y":0,"width":128,"height":128,"anchorY":128},"go":{"x":128,"y":0,"width":128,"height":128,"anchorY":128},"listing":{"x":256,"y":0,"width":128,"height":128,"anchorY":128},"marketListing":{"x":384,"y":0,"width":128,"height":128,"anchorY":128},"soldListing":{"x":0,"y":128,"width":128,"height":128,"anchorY":128}}')},c05i:function(t,e){t.exports="/_next/static/images/location-icon-atlas2-af41c90abf320fa0845a0beb6fb44ff6.png"}}]);